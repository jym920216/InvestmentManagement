buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
        springCloudVersion = 'Brixton.SR6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
    baseName = 'web-gateway'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {url "https://repo.spring.io/snapshot"}
    maven {url "https://repo.spring.io/milestone"}
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
	compile('org.springframework.boot:spring-boot-starter-undertow')
	compile("org.springframework.boot:spring-boot-starter-websocket")
    compile('org.springframework.cloud:spring-cloud-starter-zuul')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.kafka:spring-kafka')

    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-logging')
    compile('net.logstash.logback:logstash-logback-encoder:4.8')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

def getVersion() {
    def env = System.getenv()
    def buildNumber = env.BUILD_NUMBER?.toInteger()
    def buildType = env.BUILD_TYPE

    def version = String.format("%s%d", buildType?buildType:"dev", buildNumber?buildNumber:0)
    return version
}

task updateVersion << {
    def env = System.getenv()
    def workspace = env.WORKSPACE

    if (!workspace?.trim()){
        workspace = "../.."
    }

    def version = getVersion()
    println "[updateVersion]version= $version"
    def app_yml = String.format("%s/web-ui/%s/src/main/resources/application.yml", workspace, jar.baseName)
    String contents = new File(app_yml).getText("UTF-8")

    contents = contents.replaceAll('%%VERSION%%', version)
    new File(app_yml).write(contents, "UTF-8")
}

docker {
    registry = "docker-registry:5000"
}

task copyJar(dependsOn: 'jar') << {
    copy {
        from "."
        into "build/docker"
        include "wait-for-it.sh"
        include "start.sh"
        include "build/libs/${jar.baseName}-${jar.version}.jar"
    }
}

task buildDocker(type: Docker) {
    dependsOn copyJar

    project.group = docker.registry
    applicationName = jar.baseName
    tagVersion = getVersion()
    println "[docker]version= $tagVersion"
    dockerfile = "Dockerfile"
    push = true
}

assemble{
    dependsOn ":copyFile"
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.BUILD-SNAPSHOT"
    }
}


bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev" 
}

test {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev" 
}
